name: ci
on:
  pull_request:
  push:
    branches: [ main ]
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest black ruff isort pre-commit
          pre-commit install
      - name: Lint
        run: |
          ruff check .
          black --check .
          isort --check-only .
      - name: Unit tests
        run: pytest -q
      - name: Smoke test (pipeline components)
        run: |
          # Create tiny manifest for testing
          mkdir -p manifests
          cat > manifests/test_manifest.csv << 'EOF'
          pdf_path,md5,filesize,guess_year,lang,doi,title
          /tmp/fake1.pdf,m1,1,2019,en,d1,title1
          /tmp/fake2.pdf,m2,1,2020,en,d2,title2
          EOF
          # Test split functionality
          python scripts/make_split.py --manifest manifests/test_manifest.csv --ratio 0.7 0.3 0.0 --out_dir manifests
          # Create tiny corpus for KB build test
          mkdir -p datasets/data_parsed
          cat > datasets/data_parsed/corpus.jsonl << 'EOF'
          {"text":"Test MAO process improves emissivity","doc_id":"test.pdf","page":1}
          EOF
          # Test KB build with tiny corpus
          python -m maowise.kb.build_index --corpus datasets/data_parsed/corpus.jsonl --out_dir datasets/index_store || true

  api-e2e-lite:
    runs-on: ubuntu-latest
    timeout-minutes: 6
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # 安装测试依赖
        pip install pytest httpx
    
    - name: Prepare test data
      run: |
        # 确保测试夹具存在
        mkdir -p tests/fixtures
        mkdir -p datasets/data_parsed
        mkdir -p reports
        
        # 复制测试夹具到语料库位置（如果不存在）
        if [ ! -f datasets/data_parsed/corpus.jsonl ]; then
          cp tests/fixtures/min_corpus.jsonl datasets/data_parsed/corpus.jsonl
        fi
    
    - name: Run API E2E tests
      env:
        # 确保使用离线模式
        OPENAI_API_KEY: ""
        DEBUG_LLM: "false"
      run: |
        pytest tests/api/test_end_to_end.py -v --tb=short --maxfail=5
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: api-test-results
        path: |
          reports/
          *.log

